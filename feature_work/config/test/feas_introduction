##Description##
##--

##TaskInfo##
creator = 'dongjian03@meituan.com'

source = {
    'db': META['hmart_waimai_risk'],
}
stream = {
    'format': '',
}
target = {
    'db': META['hmart_waimai_risk'],
    'table': 'test_dj',
}

##Load##

set hive.exec.dynamic.partition=true;
set hive.exec.dynamic.partition.mode=nonstrict;
##-- Load节点, (可以留空)
insert overwrite table `$target.table` partition (dt='$now.datekey')
-- 单天下单5单（包括非活动单）以上（>5）且集中在两家内
-- 验证策略: 单日高频用户 join 商家小于2的用户 的数量 跟总体数量一致.
 SELECT
  b.recipient_phone recipient_phone,
  max(a.user_id)                        user_id,
  max(is_food_continus)               is_food_continus,
  max(food_continus_days)             food_continus_days,
  max(food_continus_weight)           food_continus_weight,
  max(is_1hour2ord)                   is_1hour2ord,
  max(1hour2ord_days)                 1hour2ord_days,
  max(1hour2ord_weight)               1hour2ord_weight,
  max(is_7day14ord)                   is_7day14ord,
  max(7day14ord_days)                 7day14ord_days,
  max(7day14ord_weight)               7day14ord_weight,
  max(is_outofrange)                  is_outofrange,
  max(outofrange_days)                outofrange_days,
  max(outofrange_weight)              outofrange_weight,
  max(is_reopen)                      is_reopen,
  max(overlap_rate)                   overlap_rate,
  max(reopen_weight)                  reopen_weight,
  max(is_selford)                     is_selford,
  max(self_ord_num)                   self_ord_num,
  max(selford_weight)                 selford_weight,
  max(is_account_one2n)               is_account_one2n,
  max(one2n_phone_num)                one2n_phone_num,
  max(one2n_weight)                   one2n_weight,
  max(is_dense)                       is_dense,
  max(dense_ord_num)                  dense_ord_num,
  max(dense_weight)                   dense_weight,
  max(in_phone_blacklist_now)         in_phone_blacklist_now,
  max(in_phone_blacklist_ever)        in_phone_blacklist_ever,
  max(in_uuid_blacklist_now)          in_uuid_blacklist_now,
  max(in_uuid_blacklist_ever)         in_uuid_blacklist_ever,
  max(in_userid_blacklist_now)        in_userid_blacklist_now,
  max(in_userid_blacklist_ever)       in_userid_blacklist_ever,
  max(in_payaccount_blacklist_now)    in_payaccount_blacklist_now,
  max(in_payaccount_blacklist_ever)   in_payaccount_blacklist_ever,
  max(has_login_history)              has_login_history,
  max(cancel_bind_times)              cancel_bind_times,
  max(sourcelinkid)                   sourcelinkid,
  max(is_source_abnormal)             is_source_abnormal,
  max(campaign)                       campaign,
  max(medium)                         medium,
  max(source)                         source,
  max(content)                        content,
  max(term)                           term,
  max(regdate)                        regdate,
  max(cityid)                         cityid,
  max(platform)                       platform,
  max(clienttype)                     clienttype,
  max(platformid)                     platformid,
  max(appnm)                          appnm,
  max(secure_question_status)         secure_question_status,
  max(secure_question_modtimes)       secure_question_modtimes,
  max(safetylevel_score)              safetylevel_score,
  max(has_recharge_history)           has_recharge_history,
  max(recharge_times)                 recharge_times,
  max(has_refundapply_history)        has_refundapply_history,
  max(refundapply_times)              refundapply_times,
  max(device_first_purchase_times)    device_first_purchase_times,
  max(has_whole_client_fist_purchase) has_whole_client_fist_purchase,
  max(meituan_purchase_order_count)   meituan_purchase_order_count,
  max(meituan_lottery_order_count)    meituan_lottery_order_count,
  max(register_be_invited)            register_be_invited,
  max(has_invite_other_register)      has_invite_other_register,
  max(invite_other_register_count)    invite_other_register_count,
  max(has_qr_history)                 has_qr_history,
  max(growth_value)                   growth_value,
  max(growth_level)                   growth_level,
  max(has_interest)                   has_interest,
  max(in_yaxin_blacklist)             in_yaxin_blacklist,
  max(yaxin_blacklist_record_count)   yaxin_blacklist_record_count,
  max(has_search_record)              has_search_record,
  max(search_times)                   search_times,
  max(has_blacklistuuid_record)       has_blacklistuuid_record,
  max(blacklistuuid_uuid_count)       blacklistuuid_uuid_count,
  max(blacklistuuid_record_count)     blacklistuuid_record_count,
  max(has_biz_daohao_record)          has_biz_daohao_record,
  max(has_usersafe_daohao_record)     has_usersafe_daohao_record,
  max(islotteryuser)                  islotteryuser,
  max(ps_range_percent)               ps_range_percent,
  max(uuid32_percent)                 uuid32_percent,
  max(2order_percent)                 2order_percent,
  max(other_dtype__percent)           other_dtype__percent,
  max(order_num)                      order_num,
  max(aver_order)                     aver_order,
  max(aver_charge)                    aver_charge,
  max(start_time_before_120s)         start_time_before_120s,
  max(start_time_before_240s)         start_time_before_240s,
  max(start_time_after_60s)           start_time_after_60s,
  max(start_time_after_180s)          start_time_after_180s,
  max(start_order_ratio)              start_order_ratio,
  max(all_time_before_120s)           all_time_before_120s,
  max(all_time_after_180s)            all_time_after_180s,
  max(all_order_ratio)                all_order_ratio,
  max(city_refresh)                   city_refresh,
  max(order_dist_entropy)             order_dist_entropy,
  max(poi_refresh)                    poi_refresh,
  max(max_continue_order_num)         max_continue_order_num,
  max(max_continue_2_order_num)       max_continue_2_order_num
FROM
  mart_waimai_risk.aggr_dapan_analysis__usr_risk a
  INNER JOIN
  (
    SELECT
      user_id,
      recipient_phone
    FROM
      mart_waimai_risk.fact_act_base_risk
    WHERE
      dt >= '20150601'
    GROUP BY
      user_id, recipient_phone
  ) b
    ON
      a.user_id = b.user_id
GROUP BY
  b.recipient_phone


##TargetDDL##
##-- 目标表表结构
CREATE TABLE IF NOT EXISTS `$target.table`(
  recipient_phone string,
  user_id int COMMENT 'user_id',
  is_food_continus int COMMENT '是否命中菜品连续',
  food_continus_days int COMMENT '菜品连续天数',
  food_continus_weight int COMMENT '策略权重',
  is_1hour2ord int COMMENT '是否命中一小时2单',
  1hour2ord_days int COMMENT '一小时2单天数',
  1hour2ord_weight int COMMENT '策略权重',
  is_7day14ord int COMMENT '是否命中连续下单',
  7day14ord_days int COMMENT '连续下单天数',
  7day14ord_weight int COMMENT '策略权重',
  is_outofrange int COMMENT '是否命中不在配送范围内',
  outofrange_days int COMMENT '不在配送范围内天数',
  outofrange_weight int COMMENT '策略权重',
  is_reopen int COMMENT '是否命中处罚商家再上线',
  overlap_rate int COMMENT '处罚商家再上线订单重合度',
  reopen_weight int COMMENT '策略权重',
  is_selford int COMMENT '是否命中商家自下单',
  self_ord_num int COMMENT '商家自下单订单数',
  selford_weight int COMMENT '策略权重',
  is_account_one2n int COMMENT '是否支付账户一对多',
  one2n_phone_num int COMMENT '一个支付账户对应手机号数',
  one2n_weight int COMMENT '策略权重',
  is_dense int COMMENT '是否命中下单密集度',
  dense_ord_num int COMMENT '下单密集订单数',
  dense_weight  int COMMENT '策略权重',


  in_phone_blacklist_now tinyint COMMENT '目前是否在外卖手机黑名单',
  in_phone_blacklist_ever tinyint COMMENT '是否曾经在外卖手机黑名单',
  in_uuid_blacklist_now tinyint COMMENT '目前是否在外卖uuid黑名单',
  in_uuid_blacklist_ever tinyint COMMENT '是否曾经在外卖uuid黑名单',
  in_userid_blacklist_now tinyint COMMENT '目前是否在外卖userid黑名单',
  in_userid_blacklist_ever tinyint COMMENT '是否曾经在外卖userid黑名单',
  in_payaccount_blacklist_now tinyint COMMENT '目前是否在外卖支付帐号黑名单',
  in_payaccount_blacklist_ever tinyint COMMENT '是否曾经在外卖支付帐号黑名单',
  has_login_history tinyint COMMENT '是否有登陆历史记录',
  cancel_bind_times int COMMENT '取消手机号绑定次数',
  sourcelinkid int COMMENT '来源链接ID',
  is_source_abnormal int COMMENT '是否来源异常',
  campaign string COMMENT 'GA参数campaign',
  medium string COMMENT 'GA参数medium',
  source string COMMENT 'GA参数source',
  content string COMMENT 'GA参数content',
  term string COMMENT 'GA参数term',
  regdate string COMMENT '注册日期，eg:2012-01-30',
  cityid smallint COMMENT '城市ID',
  platform tinyint COMMENT '平台 0:浏览器 1:客户端',
  clienttype string COMMENT '客户端类型: iphone ipad android i m, 默认为www',
  platformid smallint COMMENT '平台ID',
  appnm string COMMENT 'app名字',
  secure_question_status tinyint COMMENT '是否设定安保问题',
  secure_question_modtimes int COMMENT '设定安保问题次数',
  safetylevel_score int COMMENT '安全等级分值',
  has_recharge_history tinyint COMMENT '是否有充值记录',
  recharge_times int COMMENT '充值次数',
  has_refundapply_history tinyint COMMENT '是否有美团退款申请记录',
  refundapply_times int COMMENT '美团退款申请次数',
  device_first_purchase_times int COMMENT '设备首次美团购买次数',
  has_whole_client_fist_purchase tinyint COMMENT '是否PC和移动端都有美团首次购买信息',
  meituan_purchase_order_count int COMMENT '在美团购买的订单数',
  meituan_lottery_order_count int COMMENT '在美团抽奖的订单数',
  register_be_invited tinyint COMMENT '是否被邀请注册',
  has_invite_other_register tinyint COMMENT '是否曾经邀请他人注册',
  invite_other_register_count int COMMENT '邀请他人注册次数',
  has_qr_history tinyint COMMENT '是否有外卖客服记录',
  growth_value int COMMENT '用户成长值',
  growth_level int COMMENT '用户等级',
  has_interest tinyint COMMENT '是否填写了兴趣爱好',
  in_yaxin_blacklist tinyint COMMENT '是否在亚信黑名单中',
  yaxin_blacklist_record_count int COMMENT '在亚信黑名单中出现次数',
  has_search_record tinyint COMMENT '是否有搜索记录',
  search_times int  COMMENT '搜索次数',
  has_blacklistuuid_record tinyint COMMENT '是否在黑名单UUID上进行过操作',
  blacklistuuid_uuid_count int COMMENT '在黑名单UUID上进行过操作的UUID数',
  blacklistuuid_record_count int COMMENT '在黑名单UUID上进行过操作的总次数',
  has_biz_daohao_record tinyint COMMENT '是否在商家有过作弊行为',
  has_usersafe_daohao_record tinyint COMMENT '是否有盗号扫号记录',
  islotteryuser  tinyint COMMENT '是否抽奖注册用户',

  ps_range_percent float COMMENT '配送范围策略订单占比',
  uuid32_percent float COMMENT 'uuid前32位相同订单占比',
  2order_percent float COMMENT '一小时两单订单占比',
  other_dtype__percent float COMMENT '非主流机型订单占比',

  order_num int comment '用户单量5月份以来',
  aver_order double comment '用户周平均订单量',
  aver_charge double comment '用户均单补贴额',
  start_time_before_120s double comment '用户开始下单时提单前120S内占比(6月1号以后的新用户有值)', 细化,拆分环节.
  start_time_before_240s double comment '用户开始下单时提单前240S内占比',
  start_time_after_60s double comment '用户开始下单时提单后60S内占比',
  start_time_after_180s double comment '用户开始下单时提单后180S内占比',
  start_order_ratio double comment '用户开始下单时用户的访购率',
  all_time_before_120s double comment '用户所有订单提前120S内占比',
  all_time_after_180s double comment '用户所有订单提后120S内占比',
  all_order_ratio double comment '用户所有订单购买率',
  city_refresh double comment '用户所有订单下单城市刷新率',
  order_dist_entropy double comment '用户所有订单具商家距离的熵',
  poi_refresh double comment '用户下单商家刷新率',
  max_continue_order_num double comment '用户最长连续下单天数(每天1单或2单)',
  max_continue_2_order_num double comment '用户最长连续两单天数'
) COMMENT ''
PARTITIONED BY ( dt string)
stored as orc


if(COALESCE(c.phone,-1)=-1 or c.valid=0, if(coalesce(g.value,-1)=-1 or c.valid=0,0,2), 1)